1.-
CREATE TRIGGER UPDATE_SALARIO NO CASCADE BEFORE UPDATE ON EMPLOYEE REFERENCING NEW AS NEW_VALUES OLD AS OLD_VALUES FOR EACH ROW WHEN (OLD_VALUES.SALARY * 1.30 < NEW_VALUES.SALARY) SIGNAL SQLSTATE '56001' SET MESSAGE_TEXT='MENSAJE_DE_ERROR'


2.-
CREATE TABLE COMPRAS (PRODUCTO_ID VARCHAR(10) NOT NULL, CANTIDAD_PRODUCTOS INT NOT NULL, ESTADO VARCHAR(1) NOT NULL)

CREATE TRIGGER INSERT_COMPRA NO CASCADE BEFORE INSERT ON COMPRAS REFERENCING NEW AS NEW_VALUES FOR EACH ROW WHEN ( 0 >= (( SELECT QUANTITY FROM INVENTORY WHERE PID = NEW_VALUES.PRODUCTO_ID)-NEW_VALUES.CANTIDAD_PRODUCTOS) ) BEGIN ATOMIC SIGNAL SQLSTATE '56001' SET MESSAGE_TEXT='MENSAJE_DE_ERROR'; END

CREATE TRIGGER SEND_COMPRA AFTER UPDATE ON COMPRAS REFERENCING NEW AS NEW_VALUES OLD AS OLD_VALUES FOR EACH ROW WHEN (NEW_VALUES.ESTADO != OLD_VALUES.ESTADO AND NEW_VALUES.ESTADO = '1') BEGIN ATOMIC UPDATE INVENTORY SET QUANTITY = QUANTITY-1 WHERE PID LIKE NEW_VALUES.PRODUCTO_ID; END


TEST:
INSERT INTO COMPRAS VALUES ('100-101-01',30,'0'); // NO PASA
INSERT INTO COMPRAS VALUES ('100-101-01',5,'0'); // SI PASA

UPDATE COMPRAS SET ESTADO = '1' WHERE PRODUCTO_ID = '100-101-01'
