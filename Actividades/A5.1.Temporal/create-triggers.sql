-- Comando: db2 -td# -f create-triggers.sql

CREATE TRIGGER INSERT_POLIZA
  AFTER INSERT
  ON poliza_usuario
  REFERENCING NEW AS NEW_VALUES
  FOR EACH ROW MODE db2sql
    BEGIN ATOMIC
      INSERT INTO poliza_usuario_sys (NO_POLIZA,DIRECCION,INICIO_POLIZA,FIN_POLIZA,COSTO_POLIZA,COBERTURA)
      VALUES (NEW_VALUES.NO_POLIZA,NEW_VALUES.DIRECCION,NEW_VALUES.INICIO_POLIZA,NEW_VALUES.FIN_POLIZA,NEW_VALUES.COSTO_POLIZA,NEW_VALUES.COBERTURA);
    END#
CREATE TRIGGER UPDATE_DIRECCION
  AFTER UPDATE
  ON poliza_usuario
  REFERENCING NEW AS NEW_VALUES OLD AS OLD_VALUES FOR EACH ROW
    WHEN (NEW_VALUES.DIRECCION != OLD_VALUES.DIRECCION)
    BEGIN ATOMIC
      UPDATE poliza_usuario_sys SET DIRECCION = NEW_VALUES.DIRECCION WHERE NO_POLIZA = NEW_VALUES.NO_POLIZA;
    END#


CREATE TRIGGER UPDATE_COBERTURA NO CASCADE
  BEFORE UPDATE
  ON poliza_usuario
  REFERENCING NEW AS NEW_VALUES OLD AS OLD_VALUES
  FOR EACH ROW
  WHEN (NEW_VALUES.COBERTURA < OLD_VALUES.COBERTURA)
    SIGNAL SQLSTATE '75000' SET MESSAGE_TEXT='No se puede bajar la cobertura';

CREATE TRIGGER UPDATE_COBERTURA_OK
  AFTER UPDATE
  ON poliza_usuario
  REFERENCING NEW AS NEW_VALUES OLD AS OLD_VALUES
  FOR EACH ROW MODE db2sql
  WHEN (NEW_VALUES.COBERTURA > OLD_VALUES.COBERTURA)
    BEGIN ATOMIC
      UPDATE poliza_usuario_sys SET COBERTURA = NEW_VALUES.COBERTURA WHERE NO_POLIZA = NEW_VALUES.NO_POLIZA;
    END#

CREATE TRIGGER CANCELAR_COBERTURA
  AFTER UPDATE
  ON poliza_usuario
  REFERENCING NEW AS NEW_VALUES OLD AS OLD_VALUES
  FOR EACH ROW MODE db2sql
  WHEN (NEW_VALUES.CANCELADA != OLD_VALUES.CANCELADA && NEW_VALUES.CANCELADA = 1)
    BEGIN ATOMIC
      UPDATE poliza_usuario_sys SET CANCELADA = NEW_VALUES.CANCELADA WHERE NO_POLIZA = NEW_VALUES.NO_POLIZA;
    END#
